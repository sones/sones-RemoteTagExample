
package com.sones;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.datacontract.schemas._2004._07.sones_library_commons.SecurityToken;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceEdgeInstance7AF3F8R2;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceHyperEdgeInstance7AF3F8R2;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceSingleEdgeInstance7AF3F8R2;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongStreampETKBXRm;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflonganyType;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOflonglongArrayOfServiceVertexInstancegXhDpTc1;
import org.datacontract.schemas._2004._07.system.ArrayOfTupleOfstringanyType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b04 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "VertexInstanceService", targetNamespace = "http://www.sones.com")
@XmlSeeAlso({
    com.microsoft.schemas._2003._10.serialization.arrays.ObjectFactory.class,
    com.microsoft.schemas._2003._10.serialization.ObjectFactory.class,
    com.sones.ObjectFactory.class,
    org.datacontract.schemas._2004._07.sones_library_commons.ObjectFactory.class,
    org.datacontract.schemas._2004._07.system.ObjectFactory.class
})
public interface VertexInstanceService {


    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myVertexTypeID
     * @param myEdgePropertyID
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "HasIncomingVertices", action = "http://www.sones.com/VertexInstanceService/HasIncomingVertices")
    @WebResult(name = "HasIncomingVerticesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "HasIncomingVertices", targetNamespace = "http://www.sones.com", className = "com.sones.HasIncomingVertices")
    @ResponseWrapper(localName = "HasIncomingVerticesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.HasIncomingVerticesResponse")
    public Boolean hasIncomingVertices(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertexTypeID", targetNamespace = "http://www.sones.com")
        Long myVertexTypeID,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflonglongArrayOfServiceVertexInstancegXhDpTc1
     */
    @WebMethod(operationName = "GetAllIncomingVertices", action = "http://www.sones.com/VertexInstanceService/GetAllIncomingVertices")
    @WebResult(name = "GetAllIncomingVerticesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllIncomingVertices", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllIncomingVertices")
    @ResponseWrapper(localName = "GetAllIncomingVerticesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllIncomingVerticesResponse")
    public ArrayOfTupleOflonglongArrayOfServiceVertexInstancegXhDpTc1 getAllIncomingVertices(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myVertexTypeID
     * @param myEdgePropertyID
     * @return
     *     returns com.sones.ArrayOfServiceVertexInstance
     */
    @WebMethod(operationName = "GetIncomingVertices", action = "http://www.sones.com/VertexInstanceService/GetIncomingVertices")
    @WebResult(name = "GetIncomingVerticesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetIncomingVertices", targetNamespace = "http://www.sones.com", className = "com.sones.GetIncomingVertices")
    @ResponseWrapper(localName = "GetIncomingVerticesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetIncomingVerticesResponse")
    public ArrayOfServiceVertexInstance getIncomingVertices(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertexTypeID", targetNamespace = "http://www.sones.com")
        Long myVertexTypeID,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myEdgePropertyID
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "HasOutgoingEdgeByVertexInstance", action = "http://www.sones.com/VertexInstanceService/HasOutgoingEdgeByVertexInstance")
    @WebResult(name = "HasOutgoingEdgeByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "HasOutgoingEdgeByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.HasOutgoingEdgeByVertexInstance")
    @ResponseWrapper(localName = "HasOutgoingEdgeByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.HasOutgoingEdgeByVertexInstanceResponse")
    public Boolean hasOutgoingEdgeByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceEdgeInstance7AF3F8R2
     */
    @WebMethod(operationName = "GetAllOutgoingEdges", action = "http://www.sones.com/VertexInstanceService/GetAllOutgoingEdges")
    @WebResult(name = "GetAllOutgoingEdgesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllOutgoingEdges", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingEdges")
    @ResponseWrapper(localName = "GetAllOutgoingEdgesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingEdgesResponse")
    public ArrayOfTupleOflongServiceEdgeInstance7AF3F8R2 getAllOutgoingEdges(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceHyperEdgeInstance7AF3F8R2
     */
    @WebMethod(operationName = "GetAllOutgoingHyperEdges", action = "http://www.sones.com/VertexInstanceService/GetAllOutgoingHyperEdges")
    @WebResult(name = "GetAllOutgoingHyperEdgesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllOutgoingHyperEdges", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingHyperEdges")
    @ResponseWrapper(localName = "GetAllOutgoingHyperEdgesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingHyperEdgesResponse")
    public ArrayOfTupleOflongServiceHyperEdgeInstance7AF3F8R2 getAllOutgoingHyperEdges(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongServiceSingleEdgeInstance7AF3F8R2
     */
    @WebMethod(operationName = "GetAllOutgoingSingleEdges", action = "http://www.sones.com/VertexInstanceService/GetAllOutgoingSingleEdges")
    @WebResult(name = "GetAllOutgoingSingleEdgesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllOutgoingSingleEdges", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingSingleEdges")
    @ResponseWrapper(localName = "GetAllOutgoingSingleEdgesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllOutgoingSingleEdgesResponse")
    public ArrayOfTupleOflongServiceSingleEdgeInstance7AF3F8R2 getAllOutgoingSingleEdges(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myEdgePropertyID
     * @return
     *     returns com.sones.ServiceEdgeInstance
     */
    @WebMethod(operationName = "GetOutgoingEdge", action = "http://www.sones.com/VertexInstanceService/GetOutgoingEdge")
    @WebResult(name = "GetOutgoingEdgeResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetOutgoingEdge", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingEdge")
    @ResponseWrapper(localName = "GetOutgoingEdgeResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingEdgeResponse")
    public ServiceEdgeInstance getOutgoingEdge(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myEdgePropertyID
     * @return
     *     returns com.sones.ServiceHyperEdgeInstance
     */
    @WebMethod(operationName = "GetOutgoingHyperEdge", action = "http://www.sones.com/VertexInstanceService/GetOutgoingHyperEdge")
    @WebResult(name = "GetOutgoingHyperEdgeResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetOutgoingHyperEdge", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingHyperEdge")
    @ResponseWrapper(localName = "GetOutgoingHyperEdgeResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingHyperEdgeResponse")
    public ServiceHyperEdgeInstance getOutgoingHyperEdge(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myEdgePropertyID
     * @return
     *     returns com.sones.ServiceSingleEdgeInstance
     */
    @WebMethod(operationName = "GetOutgoingSingleEdge", action = "http://www.sones.com/VertexInstanceService/GetOutgoingSingleEdge")
    @WebResult(name = "GetOutgoingSingleEdgeResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetOutgoingSingleEdge", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingSingleEdge")
    @ResponseWrapper(localName = "GetOutgoingSingleEdgeResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetOutgoingSingleEdgeResponse")
    public ServiceSingleEdgeInstance getOutgoingSingleEdge(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myEdgePropertyID", targetNamespace = "http://www.sones.com")
        Long myEdgePropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myPropertyID
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetBinaryProperty", action = "http://www.sones.com/VertexInstanceService/GetBinaryProperty")
    @WebResult(name = "GetBinaryPropertyResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetBinaryProperty", targetNamespace = "http://www.sones.com", className = "com.sones.GetBinaryProperty")
    @ResponseWrapper(localName = "GetBinaryPropertyResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetBinaryPropertyResponse")
    public byte[] getBinaryProperty(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myPropertyID", targetNamespace = "http://www.sones.com")
        Long myPropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflongStreampETKBXRm
     */
    @WebMethod(operationName = "GetAllBinaryProperties", action = "http://www.sones.com/VertexInstanceService/GetAllBinaryProperties")
    @WebResult(name = "GetAllBinaryPropertiesResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllBinaryProperties", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllBinaryProperties")
    @ResponseWrapper(localName = "GetAllBinaryPropertiesResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllBinaryPropertiesResponse")
    public ArrayOfTupleOflongStreampETKBXRm getAllBinaryProperties(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myPropertyID
     * @param myGraphElement
     * @return
     *     returns java.lang.Object
     */
    @WebMethod(operationName = "GetPropertyByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetPropertyByVertexInstance")
    @WebResult(name = "GetPropertyByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetPropertyByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetPropertyByVertexInstance")
    @ResponseWrapper(localName = "GetPropertyByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetPropertyByVertexInstanceResponse")
    public Object getPropertyByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement,
        @WebParam(name = "myPropertyID", targetNamespace = "http://www.sones.com")
        Long myPropertyID);

    /**
     * 
     * @param myTransToken
     * @param myVertex
     * @param mySecurityToken
     * @param myPropertyID
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "HasPropertyByVertexInstance", action = "http://www.sones.com/VertexInstanceService/HasPropertyByVertexInstance")
    @WebResult(name = "HasPropertyByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "HasPropertyByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.HasPropertyByVertexInstance")
    @ResponseWrapper(localName = "HasPropertyByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.HasPropertyByVertexInstanceResponse")
    public Boolean hasPropertyByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myVertex", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myVertex,
        @WebParam(name = "myPropertyID", targetNamespace = "http://www.sones.com")
        Long myPropertyID);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "GetCountOfPropertiesByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetCountOfPropertiesByVertexInstance")
    @WebResult(name = "GetCountOfPropertiesByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetCountOfPropertiesByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetCountOfPropertiesByVertexInstance")
    @ResponseWrapper(localName = "GetCountOfPropertiesByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetCountOfPropertiesByVertexInstanceResponse")
    public Integer getCountOfPropertiesByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOflonganyType
     */
    @WebMethod(operationName = "GetAllPropertiesByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetAllPropertiesByVertexInstance")
    @WebResult(name = "GetAllPropertiesByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllPropertiesByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllPropertiesByVertexInstance")
    @ResponseWrapper(localName = "GetAllPropertiesByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllPropertiesByVertexInstanceResponse")
    public ArrayOfTupleOflonganyType getAllPropertiesByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myPropertyID
     * @param myGraphElement
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetPropertyAsStringByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetPropertyAsStringByVertexInstance")
    @WebResult(name = "GetPropertyAsStringByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetPropertyAsStringByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetPropertyAsStringByVertexInstance")
    @ResponseWrapper(localName = "GetPropertyAsStringByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetPropertyAsStringByVertexInstanceResponse")
    public String getPropertyAsStringByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement,
        @WebParam(name = "myPropertyID", targetNamespace = "http://www.sones.com")
        Long myPropertyID);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myPropertyName
     * @param myGraphElement
     * @return
     *     returns java.lang.Object
     */
    @WebMethod(operationName = "GetUnstructuredPropertyByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetUnstructuredPropertyByVertexInstance")
    @WebResult(name = "GetUnstructuredPropertyByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetUnstructuredPropertyByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetUnstructuredPropertyByVertexInstance")
    @ResponseWrapper(localName = "GetUnstructuredPropertyByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetUnstructuredPropertyByVertexInstanceResponse")
    public Object getUnstructuredPropertyByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement,
        @WebParam(name = "myPropertyName", targetNamespace = "http://www.sones.com")
        String myPropertyName);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myPropertyName
     * @param myGraphElement
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "HasUnstructuredPropertyByVertexInstance", action = "http://www.sones.com/VertexInstanceService/HasUnstructuredPropertyByVertexInstance")
    @WebResult(name = "HasUnstructuredPropertyByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "HasUnstructuredPropertyByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.HasUnstructuredPropertyByVertexInstance")
    @ResponseWrapper(localName = "HasUnstructuredPropertyByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.HasUnstructuredPropertyByVertexInstanceResponse")
    public Boolean hasUnstructuredPropertyByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement,
        @WebParam(name = "myPropertyName", targetNamespace = "http://www.sones.com")
        String myPropertyName);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "GetCountOfUnstructuredPropertiesByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetCountOfUnstructuredPropertiesByVertexInstance")
    @WebResult(name = "GetCountOfUnstructuredPropertiesByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetCountOfUnstructuredPropertiesByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetCountOfUnstructuredPropertiesByVertexInstance")
    @ResponseWrapper(localName = "GetCountOfUnstructuredPropertiesByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetCountOfUnstructuredPropertiesByVertexInstanceResponse")
    public Integer getCountOfUnstructuredPropertiesByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns org.datacontract.schemas._2004._07.system.ArrayOfTupleOfstringanyType
     */
    @WebMethod(operationName = "GetAllUnstructuredPropertiesByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetAllUnstructuredPropertiesByVertexInstance")
    @WebResult(name = "GetAllUnstructuredPropertiesByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetAllUnstructuredPropertiesByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllUnstructuredPropertiesByVertexInstance")
    @ResponseWrapper(localName = "GetAllUnstructuredPropertiesByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetAllUnstructuredPropertiesByVertexInstanceResponse")
    public ArrayOfTupleOfstringanyType getAllUnstructuredPropertiesByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myPropertyName
     * @param myGraphElement
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetUnstructuredPropertyAsStringByVertexInstance", action = "http://www.sones.com/VertexInstanceService/GetUnstructuredPropertyAsStringByVertexInstance")
    @WebResult(name = "GetUnstructuredPropertyAsStringByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "GetUnstructuredPropertyAsStringByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.GetUnstructuredPropertyAsStringByVertexInstance")
    @ResponseWrapper(localName = "GetUnstructuredPropertyAsStringByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.GetUnstructuredPropertyAsStringByVertexInstanceResponse")
    public String getUnstructuredPropertyAsStringByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement,
        @WebParam(name = "myPropertyName", targetNamespace = "http://www.sones.com")
        String myPropertyName);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CommentByVertexInstance", action = "http://www.sones.com/VertexInstanceService/CommentByVertexInstance")
    @WebResult(name = "CommentByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "CommentByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.CommentByVertexInstance")
    @ResponseWrapper(localName = "CommentByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.CommentByVertexInstanceResponse")
    public String commentByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "CreationDateByVertexInstance", action = "http://www.sones.com/VertexInstanceService/CreationDateByVertexInstance")
    @WebResult(name = "CreationDateByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "CreationDateByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.CreationDateByVertexInstance")
    @ResponseWrapper(localName = "CreationDateByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.CreationDateByVertexInstanceResponse")
    public Long creationDateByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

    /**
     * 
     * @param myTransToken
     * @param mySecurityToken
     * @param myGraphElement
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "ModificationDateByVertexInstance", action = "http://www.sones.com/VertexInstanceService/ModificationDateByVertexInstance")
    @WebResult(name = "ModificationDateByVertexInstanceResult", targetNamespace = "http://www.sones.com")
    @RequestWrapper(localName = "ModificationDateByVertexInstance", targetNamespace = "http://www.sones.com", className = "com.sones.ModificationDateByVertexInstance")
    @ResponseWrapper(localName = "ModificationDateByVertexInstanceResponse", targetNamespace = "http://www.sones.com", className = "com.sones.ModificationDateByVertexInstanceResponse")
    public Long modificationDateByVertexInstance(
        @WebParam(name = "mySecurityToken", targetNamespace = "http://www.sones.com")
        SecurityToken mySecurityToken,
        @WebParam(name = "myTransToken", targetNamespace = "http://www.sones.com")
        Long myTransToken,
        @WebParam(name = "myGraphElement", targetNamespace = "http://www.sones.com")
        ServiceVertexInstance myGraphElement);

}
