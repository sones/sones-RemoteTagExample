
package com.sones;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b04 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RPCServiceContract", targetNamespace = "http://www.sones.com", wsdlLocation = "http://127.0.0.1:9971/rpc/wsdl")
public class RPCServiceContract
    extends Service
{

    private final static URL RPCSERVICECONTRACT_WSDL_LOCATION;
    private final static WebServiceException RPCSERVICECONTRACT_EXCEPTION;
    private final static QName RPCSERVICECONTRACT_QNAME = new QName("http://www.sones.com", "RPCServiceContract");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:9971/rpc/wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        RPCSERVICECONTRACT_WSDL_LOCATION = url;
        RPCSERVICECONTRACT_EXCEPTION = e;
    }

    public RPCServiceContract() {
        super(__getWsdlLocation(), RPCSERVICECONTRACT_QNAME);
    }

    public RPCServiceContract(WebServiceFeature... features) {
        super(__getWsdlLocation(), RPCSERVICECONTRACT_QNAME, features);
    }

    public RPCServiceContract(URL wsdlLocation) {
        super(wsdlLocation, RPCSERVICECONTRACT_QNAME);
    }

    public RPCServiceContract(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RPCSERVICECONTRACT_QNAME, features);
    }

    public RPCServiceContract(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RPCServiceContract(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns StreamedService
     */
    @WebEndpoint(name = "sonesStreamed_StreamedService")
    public StreamedService getSonesStreamedStreamedService() {
        return super.getPort(new QName("http://www.sones.com", "sonesStreamed_StreamedService"), StreamedService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StreamedService
     */
    @WebEndpoint(name = "sonesStreamed_StreamedService")
    public StreamedService getSonesStreamedStreamedService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesStreamed_StreamedService"), StreamedService.class, features);
    }

    /**
     * 
     * @return
     *     returns GraphDSService
     */
    @WebEndpoint(name = "sonesBasic_GraphDSService")
    public GraphDSService getSonesBasicGraphDSService() {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_GraphDSService"), GraphDSService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GraphDSService
     */
    @WebEndpoint(name = "sonesBasic_GraphDSService")
    public GraphDSService getSonesBasicGraphDSService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_GraphDSService"), GraphDSService.class, features);
    }

    /**
     * 
     * @return
     *     returns VertexTypeService
     */
    @WebEndpoint(name = "sonesBasic_VertexTypeService")
    public VertexTypeService getSonesBasicVertexTypeService() {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_VertexTypeService"), VertexTypeService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VertexTypeService
     */
    @WebEndpoint(name = "sonesBasic_VertexTypeService")
    public VertexTypeService getSonesBasicVertexTypeService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_VertexTypeService"), VertexTypeService.class, features);
    }

    /**
     * 
     * @return
     *     returns VertexInstanceService
     */
    @WebEndpoint(name = "sonesBasic_VertexInstanceService")
    public VertexInstanceService getSonesBasicVertexInstanceService() {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_VertexInstanceService"), VertexInstanceService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VertexInstanceService
     */
    @WebEndpoint(name = "sonesBasic_VertexInstanceService")
    public VertexInstanceService getSonesBasicVertexInstanceService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_VertexInstanceService"), VertexInstanceService.class, features);
    }

    /**
     * 
     * @return
     *     returns EdgeTypeService
     */
    @WebEndpoint(name = "sonesBasic_EdgeTypeService")
    public EdgeTypeService getSonesBasicEdgeTypeService() {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_EdgeTypeService"), EdgeTypeService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EdgeTypeService
     */
    @WebEndpoint(name = "sonesBasic_EdgeTypeService")
    public EdgeTypeService getSonesBasicEdgeTypeService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_EdgeTypeService"), EdgeTypeService.class, features);
    }

    /**
     * 
     * @return
     *     returns EdgeInstanceService
     */
    @WebEndpoint(name = "sonesBasic_EdgeInstanceService")
    public EdgeInstanceService getSonesBasicEdgeInstanceService() {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_EdgeInstanceService"), EdgeInstanceService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EdgeInstanceService
     */
    @WebEndpoint(name = "sonesBasic_EdgeInstanceService")
    public EdgeInstanceService getSonesBasicEdgeInstanceService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.sones.com", "sonesBasic_EdgeInstanceService"), EdgeInstanceService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RPCSERVICECONTRACT_EXCEPTION!= null) {
            throw RPCSERVICECONTRACT_EXCEPTION;
        }
        return RPCSERVICECONTRACT_WSDL_LOCATION;
    }

}
